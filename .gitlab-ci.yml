stages:
  - Linting
  - Testing
  - Artifacts

ESLint:
  image: node
  stage: Linting
  cache:
    paths:
      - frontend/.yarn
      - frontend/node_modules/
  script:
    - cd frontend
    - yarn install --cache-folder .yarn
    - yarn eslint src

PyLint:
  image: "python:3.7"
  stage: Linting
  script:
    - python --version
    - cd backend
    - python -m pip install -r requirements.txt
    - python -m pylint gjorno backend

yarn test:
  image: node
  stage: Testing
  cache:
    paths:
      - frontend/.yarn
      - frontend/node_modules/
  artifacts:
    paths:
      - frontend/coverage/
  script:
    - cd frontend
    - yarn install --cache-folder .yarn
    - yarn test --coverage --passWithNoTests --coverageReporters html --coverageReporters text

python manage.py test:
  image: "python:3.7"
  stage: Testing
  artifacts:
    paths:
      - backend/htmlcov/
  script:
    - python --version
    - cd backend
    - python -m pip install -r requirements.txt
    - coverage run manage.py test
    - coverage html
    - coverage report

pages:
  stage: Artifacts
  dependencies:
    - python manage.py test
    - yarn test
  script:
    - mkdir --parents public/coverage/
    - mv backend/htmlcov/ public/coverage/backend
    - mv frontend/coverage/ public/coverage/frontend
  artifacts:
    paths:
      - public
    expire_in: 30 days
